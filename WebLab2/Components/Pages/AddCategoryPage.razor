@page "/add-category"
@inject HttpClient Http
@inject NavigationManager Navigation
@using System.Net.Http.Json
@using WebLab2.HelperMethods
@using WebLab2.Models

<PageTitle>Add Category</PageTitle>
@if(isAdmin)
{
    <MudTextField @bind-Value="newCategory.Name" Label="Category Name" Required="true" />
    <MudButton Color="Color.Primary" OnClick="AddCategory">Add Category</MudButton>

    @if (isSuccess)
    {
        <MudAlert Severity="Severity.Success">Category added.</MudAlert>
    }
    @if (isError)
    {
        <MudAlert Severity="Severity.Error">Failed to add Category.</MudAlert>
    }
}
else
{
    <a href="/login">Login as an admin to add categories.</a>
}

@code {
    [Inject] private AuthHelper AuthHelper { get; set; }
    private bool isAdmin;

    private CategoryDto newCategory = new CategoryDto();
    private bool isSuccess = false;
    private bool isError = false;

    protected override async Task OnInitializedAsync()
    {
        //Not sure if this is unsafe
        isAdmin = await AuthHelper.IsUserAdminAsync();
    }

    private async Task AddCategory()
    {
        try
        {
            var token = await AuthHelper.GetAccessTokenAsync();
            if (!string.IsNullOrEmpty(token))
            {
                var requestMessage = new HttpRequestMessage(HttpMethod.Post, $"{Navigation.BaseUri}api/categories")
                    {
                        Content = JsonContent.Create(newCategory)
                    };
                requestMessage.Headers.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);

                var response = await Http.SendAsync(requestMessage);

                if (response.IsSuccessStatusCode)
                {
                    isSuccess = true;
                    isError = false;
                    newCategory = new CategoryDto();
                }
                else
                {
                    isError = true;
                    isSuccess = false;
                }
            }
            else
            {
                isError = true;
                isSuccess = false;
            }
        }
        catch (Exception)
        {
            isError = true;
            isSuccess = false;
        }
    }
}